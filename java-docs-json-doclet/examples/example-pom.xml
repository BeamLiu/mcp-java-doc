<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 
         http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    
    <groupId>com.example</groupId>
    <artifactId>my-project</artifactId>
    <version>1.0.0</version>
    <packaging>jar</packaging>
    
    <name>Example Project</name>
    <description>Example project demonstrating Javadoc JSON plugin usage</description>
    
    <properties>
        <maven.compiler.source>11</maven.compiler.source>
        <maven.compiler.target>11</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>
    
    <build>
        <plugins>
            <!-- Javadoc JSON Plugin Configuration -->
            <plugin>
                <groupId>io.emop</groupId>
                <artifactId>java-docs-json-doclet</artifactId>
                <version>1.0.0</version>
                <executions>
                    <!-- Publish Goal: Generate JSON from current project -->
                    <execution>
                        <id>generate-javadoc-json</id>
                        <phase>package</phase>
                        <goals>
                            <goal>publish</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/javadoc</outputDirectory>
                            <sourceDirectory>src/main/java</sourceDirectory>
                            <includePrivate>false</includePrivate>
                        </configuration>
                    </execution>
                    
                    <!-- Crawl Goal: Generate JSON from external Javadoc -->
                    <execution>
                        <id>crawl-external-javadoc</id>
                        <phase>package</phase>
                        <goals>
                            <goal>crawl</goal>
                        </goals>
                        <configuration>
                            <baseUrl>https://docs.sw.siemens.com/documentation/external/PL20231101866122454/en-US/custom_api/open_java_ref/</baseUrl>
                            <outputDirectory>${project.build.directory}/external-javadoc</outputDirectory>
                            <userAgent>JavaDocCrawler/1.0</userAgent>
                            <timeout>30000</timeout>
                            <mcpCompatible>true</mcpCompatible>
                            <!-- Optional: Filter specific packages -->
                            <packageFilters>
<!--                                <packageFilter>nxopen</packageFilter>-->
                                <packageFilter>nxopen.features</packageFilter>
                            </packageFilters>
                            <!-- Optional: Proxy configuration -->
                            <!-- <proxyHost>proxy.example.com</proxyHost>
                            <proxyPort>8080</proxyPort>
                            <proxyUsername>username</proxyUsername>
                            <proxyPassword>password</proxyPassword> -->
                </configuration>
            </execution>

            <!-- Simple Test Goal: Quick testing configuration -->
                    <execution>
                        <id>simple-test</id>
                        <goals>
                            <goal>publish</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/simple-test</outputDirectory>
                            <sourceDirectory>src/main/java</sourceDirectory>
                            <includePrivate>true</includePrivate>
                        </configuration>
                    </execution>
                </executions>
                <!-- Plugin dependencies required for runtime -->
                <dependencies>
                    <!-- Jackson databind includes core and annotations transitively -->
                    <dependency>
                        <groupId>com.fasterxml.jackson.core</groupId>
                        <artifactId>jackson-databind</artifactId>
                        <version>2.15.2</version>
                    </dependency>
                    <!-- JSR310 support for LocalDateTime, etc. -->
                    <dependency>
                        <groupId>com.fasterxml.jackson.datatype</groupId>
                        <artifactId>jackson-datatype-jsr310</artifactId>
                        <version>2.15.2</version>
                    </dependency>
                    <!-- HTML parsing -->
                    <dependency>
                        <groupId>org.jsoup</groupId>
                        <artifactId>jsoup</artifactId>
                        <version>1.16.1</version>
                    </dependency>
                </dependencies>
            </plugin>
            

        </plugins>
    </build>
</project>